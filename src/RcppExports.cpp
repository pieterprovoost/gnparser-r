// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// parse_names_internal
CharacterVector parse_names_internal(CharacterVector names, String format, Nullable<String> code, bool details, bool diaereses);
RcppExport SEXP _gnparser_parse_names_internal(SEXP namesSEXP, SEXP formatSEXP, SEXP codeSEXP, SEXP detailsSEXP, SEXP diaeresesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type names(namesSEXP);
    Rcpp::traits::input_parameter< String >::type format(formatSEXP);
    Rcpp::traits::input_parameter< Nullable<String> >::type code(codeSEXP);
    Rcpp::traits::input_parameter< bool >::type details(detailsSEXP);
    Rcpp::traits::input_parameter< bool >::type diaereses(diaeresesSEXP);
    rcpp_result_gen = Rcpp::wrap(parse_names_internal(names, format, code, details, diaereses));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gnparser_parse_names_internal", (DL_FUNC) &_gnparser_parse_names_internal, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_gnparser(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
